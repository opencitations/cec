<?xml version="1.0" encoding="UTF-8"?>
<patent-document status="new" lang="EN" ucid="EP-1128635-B1" country="EP" doc-number="1128635" kind="B1" date="20061115"><bibliographic-data><publication-reference fvid="23214290" ucid="EP-1128635-B1" status="new"><document-id status="new" format="original"><country>EP</country><doc-number>1128635</doc-number><kind>B1</kind><date>20061115</date><lang>EN</lang></document-id></publication-reference><application-reference ucid="EP-01301540-A" status="new" is-representative="NO"><document-id format="epo" status="new"><country>EP</country><doc-number>01301540</doc-number><kind>A</kind><date>20010221</date><lang>EN</lang></document-id></application-reference><priority-claims status="new"><priority-claim ucid="GB-0004010-A" status="new"><document-id format="epo" status="new"><country>GB</country><doc-number>0004010</doc-number><kind>A</kind><date>20000222</date></document-id></priority-claim></priority-claims><dates-of-public-availability status="new"><intention-to-grant-date><date>20060505</date></intention-to-grant-date></dates-of-public-availability><term-of-grant /><technical-data status="new"><classifications-ipcr><classification-ipcr status="new">H04L  12/28        20060101AFI20051220RMJP        </classification-ipcr><classification-ipcr status="new">H04L  12/28        20060101CFI20051220RMJP        </classification-ipcr><classification-ipcr status="new">H04L  29/08        20060101ALI20051220RMJP        </classification-ipcr><classification-ipcr status="new">H04L  29/08        20060101CLI20051220RMJP        </classification-ipcr><classification-ipcr status="new">H04L  29/12        20060101AFI20010619BHEP        </classification-ipcr><classification-ipcr status="new">H04L  29/12        20060101CFI20010619BHEP        </classification-ipcr></classifications-ipcr><classification-ecla status="new"><classification-symbol scheme="EC">H04L29/08N11</classification-symbol><classification-symbol scheme="EC">H04L29/12A</classification-symbol><classification-symbol scheme="EC">H04L29/12A1</classification-symbol><classification-symbol scheme="EC">H04L29/12A2</classification-symbol><classification-symbol scheme="EC">H04L29/12A3</classification-symbol><classification-symbol scheme="EC">H04L29/12A6</classification-symbol></classification-ecla><invention-title lang="DE" status="new">Namensverwaltungskonvention für verschiedenen Gerätetypen, und Vorrichtung und Verfahren zur Anwendung dieser Namensverwaltungskonvention</invention-title><invention-title lang="EN" status="new">Naming convention for different types of devices, and apparatus and methods using the naming convention</invention-title><invention-title lang="FR" status="new">Convention pour l' affectation de noms pour des dispositifs de types différents, et appareil et procédé utilisant cette convention pour l' affectation de noms</invention-title><citations /><figures /></technical-data><parties><applicants><applicant format="epo" status="new"><addressbook><name>IBM</name><address><country>US</country></address></addressbook></applicant><applicant format="intermediate" status="new"><addressbook><name>INTERNATIONAL BUSINESS MACHINES CORPORATION</name><address><country /></address></addressbook></applicant></applicants><inventors><inventor format="epo" status="new"><addressbook><name>INNES BRIAN</name><address><country>GB</country></address></addressbook></inventor><inventor format="epo" status="new"><addressbook><name>WRIGHT STEVEN P</name><address><country>GB</country></address></addressbook></inventor><inventor format="intermediate" status="new"><addressbook><name>INNES, BRIAN</name><address><country /></address></addressbook></inventor><inventor format="intermediate" status="new"><addressbook><name>WRIGHT, STEVEN P.</name><address><country /></address></addressbook></inventor><inventor format="original" status="new"><addressbook><last-name>Innes, Brian, c/o IBM United Kingdom Ltd.</last-name><address><street>Intellectual Property Law, Hursley Park</street><city>Winchester, Hampshire SO21 2JN</city><country>GB</country></address></addressbook></inventor><inventor format="original" status="new"><addressbook><last-name>Wright, Steven P., c/o IBM United Kingdom Ltd.</last-name><address><street>Intellectual Property Law, Hursley Park</street><city>Winchester, Hampshire SO21 2JN</city><country>GB</country></address></addressbook></inventor></inventors><assignees><assignee format="original" status="new"><addressbook><last-name>International Business Machines Corporation</last-name><address><street>New Orchard Road</street><city>Armonk, NY 10504</city><country>US</country></address></addressbook></assignee></assignees><agents><agent format="original" status="new"><addressbook><last-name>Jennings, Michael John</last-name><address><street>IBM United Kingdom Limited, Intellectual Property Department, Hursley Park</street><city>Winchester, Hampshire SO21 2JN</city><country>GB</country></address></addressbook></agent></agents></parties><international-convention-data><designated-states><ep-contracting-states><country>AT</country><country>BE</country><country>CH</country><country>CY</country><country>DE</country><country>DK</country><country>ES</country><country>FI</country><country>FR</country><country>GB</country><country>GR</country><country>IE</country><country>IT</country><country>LI</country><country>LU</country><country>MC</country><country>NL</country><country>PT</country><country>SE</country><country>TR</country></ep-contracting-states></designated-states></international-convention-data></bibliographic-data><abstract lang="EN" source="EPO" status="new"><p>Provided are methods, apparatus, and computer programs for self-generating device names for communications devices using processes running on the device. The device names are then used to enable the devices to be identified during network communications. This avoids the configuration overhead inherent in requiring unique device names to be allocated by a central naming authority. Uniqueness of device names is achieved by a class-based naming convention in which class names are associated with device types and unique device identifiers are allocated for devices within a class. The device identifiers of one class may have a very different format from device identifiers in other classes, and processes are provided for interpreting the different formats of device identifier to identify individual devices. &lt;IMAGE&gt;</p></abstract><abstract lang="EN" status="new"><p num="">Provided are methods, apparatus, and computer programs for
self-generating device names for communications devices using processes
running on the device. The device names are then used to enable the devices
to be identified during network communications. This avoids the
configuration overhead inherent in requiring unique device names to be
allocated by a central naming authority. Uniqueness of device names is
achieved by a class-based naming convention in which class names are
associated with device types and unique device identifiers are allocated
for devices within a class. The device identifiers of one class may have a
very different format from device identifiers in other classes, and
processes are provided for interpreting the different formats of device
identifier to identify individual devices.
<img file="00000001.tif" id="img-EP-1129058-A1-00000001" he="94" wi="128" img-format="tif" img-content="ad" orientation="unknown" inline="no" /></p></abstract><description lang="EN" status="new"><heading><b>Field of Invention</b></heading><p num="p0001">The present invention relates to a naming convention and to methods, apparatus and computer programs for using the naming convention for identification of individual devices of different types.</p><heading><b>Background</b></heading><p num="p0002">It is predicted that over the next few years the number and variety of communication and data processing devices in existence are going to increase very rapidly. These include devices such as mobile telephones with additional processing capabilities (&quot;smart phones&quot;), personal digital assistants (PDAs), smart home and office appliances, and many application-specific devices such as embedded device-failure management systems, etc.</p><p num="p0003">There is a need for messaging systems which handle communications with these devices to be able to uniquely identify and route messages to and from such devices. However, if all devices are required to conform to a conventional naming convention then the configuration and maintenance requirements of ensuring uniqueness of device identifiers to prevent naming conflicts will be very onerous.</p><p num="p0004">Another issue is that a naming convention in which all device identifiers are tied to a specific communications protocol considerably limits flexibility. It is desirable to enable mobile devices to connect to the communications network using different communications protocols which may each use a different addressing scheme (for example TCP/IP dial up networking, Infra Red beaming, Nokia's Blue Tooth, and WAP each use different addressing schemes).</p><p num="p0005">European Patent Application Publication no. <ref type="patent">EP-A-0537894</ref> describes the mismatch between disparate naming conventions and describes a merging of different naming systems within OSF/DCE. Thereafter, <ref type="patent">EP-A-0537894</ref> describes a federation of disparate naming systems using a highly abstract naming model and name resolution interface to enable representation of objects within different naming systems. <ref type="patent">EP-A-0537894</ref> discloses separating object names into a &quot;head&quot; and a &quot;tail&quot; - giving an example in which the &quot;head&quot; is &quot;user&quot; and the &quot;tail&quot; is a specific user name.</p><p num="p0006"><ref type="npl">Ravindran, K., et al &quot;A Naming System for Feature-based Service Specification in Distributed operating Systems&quot;, 1991 SIGSMALL/PC Symposium on Small Systems, ACM, New York. USA, vol.17, No.3/4, pages 12-21</ref>, discloses a naming system in which (<i>Attribute_name</i>, <i>Attribute_value</i>) pairs are used to characterize and enable access to services.</p><p num="p0007"><ref type="npl">Peterson, L.L., &quot;An Overview of UNP&quot;, Computer Communication Review, ACM, New York, USA, Vol.19, No.2. 1 April 1989, pages 21-31</ref>, discloses an attribute-based naming protocol (Universal Naming Protocol) and generic attribute-based name server and describes how attributes may be used to return objects that match the specified attributes.</p><p num="p0008"><ref type="npl">Hunt, R., &quot;CUNT X.500 Directories - principles and applications&quot;, Computer communications, Elsevier Science Publishers BV, Amsterdam, Netherlands, Vol.15, NO.10, 1 December 1992, pages 636-645</ref>, describes how X.500 directories provide support for naming and addressing.</p><heading><b>Summary of Invention</b></heading><p num="p0009">In a first aspect, the present invention provides methods, apparatus and computer programs for generating device names for devices within a communications network wherein the device names comprise a class name which identifies a device class; and a device identifier which uniquely identifies a device within the class.</p><p num="p0010">The class-based naming convention allows different types of device to have different formats of device identifier. Particular class names are associated with particular types of device which have particular device identifier formats, and the class names each facilitate interpretation and resolution of their associated format of device identifier. In a preferred embodiment of the invention, the class names are used during routing of communications to identify a respective name resolution process for interpreting and resolving the particular format of device identifiers of that class. The name resolution process then identifies a specific device.</p><p num="p0011">The device names are preferably generated by a software component running on the respective devices, from a pre-recorded device class name and a pre-recorded device identifier. This self-generation of device names using pre-recorded data and a process running on the device can ensure global uniqueness of generated device names if device manufacturers each pre-register class names and allocate device identifiers uniquely for each of their devices. That is, if a particular class name can only be used by one organisation or association who manage unique allocation of device identifiers within that class, then global uniqueness of device names is achievable.</p><p num="p0012">In one embodiment, the device class name is not pre-recorded on the device in the format used in the self-generated name, but is determined from the type of communication device (either derived from the operating environment or derived from pre-recorded device type information).</p><p num="p0013">The invention avoids the significant configuration and maintenance overhead that would be required if forcing all devices to implement a conventional inflexible naming convention, with each device requiring allocation of a centrally-approved device identifier as the way to avoid name conflicts.</p><p num="p0014">Furthermore, the non-volatile memory which is available on some hand-held devices is limited to read-only memory, and so a device name which is allocated to the device by a central name service or which is otherwise dynamically allocated via apparatus to which the device connects would not be retained in device memory when power is lost or certain failures occur. This potential loss is not a problem when self-generation of device names is implemented according to the preferred embodiment of the present invention, since the device name can be regenerated easily and consistently.</p><p num="p0015">In a second aspect, the invention provides methods, apparatus and computer programs for registering the generated device names with an addressable communications apparatus within a communications network, to enable delivery of communications to registered devices via the addressable communications apparatus. The addressable communications apparatus may be an enterprise server providing a &quot;postbox&quot; service, which mobile devices can connect to when ready to retrieve mail. Alternatively, the communications apparatus may be a router which dials mobile devices upon receipt of communications targeted at the respective device.</p><p num="p0016">In a third aspect, the invention provides methods, apparatus and computer programs for routing communications to devices within a communications network. Devices in the network are identifiable by a device name, and different types of device within the network have different formats of device identifier within their respective device names. The method includes the following steps for resolving a device name to identify an individual device: identifying a class name within a device name and resolving the class name to identify a device class, thereby to identify a process for interpreting device identifiers which have a particular format associated with the device class; identifying a device identifier within the device name, which device identifier corresponds to the device identifier format of the identified device class, and interpreting the device identifier using the identified interpreter process to identify an individual device within the class.</p><p num="p0017">The name resolution steps according to this aspect of the invention are preferably performed at an enterprise server comprising an addressable communications apparatus within the network. Lightweight, mobile communications devices which register with the enterprise server receive network communications via the enterprise server.</p><p num="p0018">Methods according to the invention may be implemented by software. In particular, aspects of the invention may be implemented in one or more program products comprising program code recorded on a machine-readable recording medium, wherein the program code controls the operation of an apparatus on which it runs to perform the steps of the method.</p><heading><u style="single">Brief Description of Drawings</u></heading><p num="p0019">Preferred embodiments of the present invention will now be described in detail, by way of example, with reference to the accompanying drawings in which:
<ul list-style="bullet"><li>Figure 1 is a schematic representation of a communications network in which the present invention may be implemented;</li><li>Figure 2 shows steps of a method of generating a device name according to an embodiment of the invention; and</li><li>Figure 3 shows steps of a method of resolving a device name to identify a device according to an embodiment of the invention.</li></ul></p><heading><u style="single">Detailed Description of Preferred Embodiments</u></heading><p num="p0020">The present invention is implementable in a great many different types of communications and data processing devices such as, for example, personal digital assistants (PDAs), so-called &quot;smart&quot; telephones, laptop computers, remote pipeline control sensors, and communications and data processing devices embedded in apparatus such as vehicles, washing machines, and refrigerators. The invention is implementable to enable network communications between this wide range of devices and more conventional networked computers. The invention is not limited to any specific operating system or any particular communication mechanism, although the invention is compatible with Internet communications.</p><p num="p0021">The invention solves a set of problems that will soon arise because of the enormous proliferation of communications and data processing devices which is currently taking place and which is predicted to continue over the next several years.</p><p num="p0022">If all of the enormous number and variety of different types of device are to be connected to the Internet and are to be capable of initiating and receiving communications, then each device requires a unique name or some other mechanism is required to avoid potential name conflicts. If each device is required to conform to a single, universal device name format then this will require every device to be allocated a unique name which conforms to this format when it is manufactured or when it connects to the Internet. The configuration and maintenance overhead inherent in this will become horrendous, and there could be a considerable delay before a device can be allocated a name which is confirmed to be globally unique.</p><p num="p0023">Currently, many different device manufacturers and many different communication protocols implement their own device naming scheme, such that there is no universal convention.</p><p num="p0024">The present invention mitigates these problems, as described below with reference to Figures 1, 2 and 3.</p><p num="p0025">According to the invention, device names are generated 210 automatically in a self-determined manner by a software component 70 installed on certain types of communication device 10,20,30. This software component constructs 210 a device name, in accordance with a generic hierarchical naming convention, from a class name and a device identifier both of which may be pre-recorded on the device. These two data components are preferably held in a non-volatile hardware component 40 of the device (for example an EPROM, or a SIM card of a telephone, or burnt into a silicon component) and read 200 for use in generation of the device name. Alternatively, the class name may be derived 200 from the operating environment of the device and only the device identifier is pre-recorded. The device class determines the format of the device identifier component of the device name, and hence recognition of a class name allows the format of device identifier for that class to be interpreted.</p><p num="p0026">The self-generation of names according to a class-based, flexible naming convention avoids many of the constraints of conventional rigid naming conventions.</p><p num="p0027">Firstly, it enables communications to support many different naming schemes within the generic hierarchical name structure (class name followed by device identifier which is unique for the class). In particular, the unique identifiers within device names can be formatted differently for each class. This allows the naming convention to make use of existing manufacturer-allocated device identifiers within the naming convention. In contrast, conventional hierarchical naming conventions such as URLs are fixed format and require everyone to conform to the rigid convention and, since every device uses the same form of device name, each device requires a name which has been uniquely assigned to it by some central name allocation authority if naming conflicts are to be avoided.</p><p num="p0028">Secondly, an hierarchical name structure with the flexibility provided by inclusion of a class name component enables additional device identification formats to be easily incorporated in the future by adding classes.</p><p num="p0029">Thirdly, consistently repeatable self-generation of device names avoids the problem of loss of data when a device having no non-volatile writeable memory is powered down - the device name can simply be regenerated each time the device is powered up.</p><p num="p0030">In one embodiment of the invention, the device name is never stored in the device's memory since generation of the device name is a step of the process of sending a message. In some devices, it may be at least as efficient to read a unique device identifier from EPROM, for example, and generate the name each time it is required as it would be to generate the name when the device is powered up and then to store the name in volatile memory for retrieval when required.</p><p num="p0031">Ensuring that each device identifier is unique for its class and confirming that class names are allocated uniquely for different types of device is sufficient to ensure universal uniqueness of device names, avoiding potential name conflicts which could otherwise arise when a common messaging system attempts to handle multiple naming schemes. The unique allocation of class names can be achieved by device manufacturers each pre-registering the class name that they intend to use as part of their device names.</p><p num="p0032">According to a preferred embodiment of the invention, a device's type (class) and a manufacturer-assigned identifier (which is unique within the device's class) are used to generate 210 the device name. For example, if a device type is a 'netBook' device from Psion and the manufacturer-assigned ID for a specific individual netBook is a serial number '1234567812345678', then an example universally-unique device name which identifies the device as being within the class of devices running the EPOC operating system 80 is:

epoc!netBook%1234567812345678@uk.ibm.com

where 'uk.ibm.com' is an owning enterprise server name (only required for communications sent from or destined for devices outside of the sender's enterprise network, and even then not required for all types of communication), '!' is a separator between the device name class and the class-specific unique device identifier and '@' is a separator between the unique identifier and the optional enterprise server name. These separators may be any defined symbol. The EPOC operating system 80 provides APIs to access a device type and a unique device ID stored in EPROM, for example, of the device and this facility is used by the name generation software.</p><p num="p0033">The 'epoc' class name is useful during routing of network communications since it determines that a message for this device should be sent to a specific name resolution process which is associated with devices running the EPOC operating system 80. This name resolution process 50 preferably runs on a data processing apparatus 60 at the network address identified by the enterprise server name. This name resolution process is adapted to resolve the unique device identifier 'netBook%1234567812345678' to identify a specific EPOC device known to the 'epoc' name resolution process. Secondly, the class name component of device names are useful for avoiding the potential name conflict that would arise if two devices of different types had identical device identifiers.</p><p num="p0034">More generally, a device name comprises a name class, a unique device identifier within the class, and an optional enterprise name. This takes the form:

&lt;class&gt;!&lt;unique device ID&gt;[@&lt;enterprise&gt;]</p><p num="p0035">Additional examples include a device with built in telephony, which has a device name of:

tel!+44 1234 12345678</p><p num="p0036">An example device name for a device with a burned in IPV6 address is:

ip6!FEDC:BA98:7654:3210:FEDC:BA98:7654:3210</p><p num="p0037">For many devices, the device is able to determine its own ID using the data stored on the device, such as using the EPOC system functions described above. If no such information access features exists for certain devices, for example because interfaces for accessing the unique device identifiers are not yet available, then a unique device name can be assigned to such devices in accordance with the naming convention of the invention. For example, a CPU may have a unique identifier that can be used to enable a network configuration manager to generate a device name for a computer if the computer's operating system does not provide an interface for querying the CPU identifier to enable self-generation of the device name. If device type class names are predefined and the configuration manager selects the appropriate class name for each device, globally unique device names are still achievable.</p><p num="p0038">Thus, the naming convention according to the invention can be implemented for identifying individual devices of all types, even if self-generation of a unique name is not possible for certain device types.</p><p num="p0039">Since the class name identifies a process which is capable of interpreting the specific format of unique identifiers within the class, resolution 240 of the first part of the name (the class name) facilitates comprehension and resolution 260 of the second part (the unique identifier within the class). This is not true of known hierarchical naming conventions. In such known conventions, a device identifier may comprise a plurality of separate components which are resolved in separate steps, but resolution of one component does not determine the format of subsequent components from a set of potential formats and hence does not facilitate comprehension and resolution of subsequent components.</p><p num="p0040">For example, resolution of the components of an internet address (which implements an hierarchical structure such as: &quot;server name.country name.company name.organisation type&quot;) merely involves a series of lookup operations to step through an hierarchical directory. The naming convention of the present invention is compatible with internet addressing, but extends it in a flexible manner which helps to avoid name conflicts and permits self-generation of names.</p><p num="p0041">In the preferred embodiment, generated device names are registered 220 with an enterprise server 60 within the network 100. This can involve a systems administrator of an organisation which owns the device notifying the organisation's enterprise server of the device names of all devices owned or approved by the enterprise. A communications manager process at the server thereafter routes to a respective server-based input queue all communications which are destined for that device.</p><p num="p0042">Alternatively, the step of sending 220 a request to the enterprise server to register a device name can be implemented as one of the functions performed by the name generation software component 70 running on a device. In this latter case, the sending of a registration request or notification could be performed whenever the name is generated. If the name is regenerated during a single user session, the registration requests may be limited to one per user session to avoid unnecessary transmissions.</p><p num="p0043">The enterprise server operates a postbox service for mobile devices owned or managed by the particular enterprise. Communications from remote data processing systems or communications devices which are targeted for a particular pervasive device are sent to the relevant enterprise server and are added to a respective queue 90 in the storage of the enterprise server 60. For mobile devices which may connect to the network at different locations, and for other devices which connect to the network via wireless connections such that permanent connection-availability cannot be assumed, the communications are held at the enterprise server 60 until requested by the mobile device.</p><p num="p0044">When network communications are required by a mobile device user, the device 10 is connected to a network-connected computer 110. This may be anywhere in the network. The networked-computer serves as a gateway or proxy for remotely accessing the enterprise server, and allocates an IP address for the mobile device. From the viewpoint of the enterprise server, the networked-computer appears to be the registered mobile device, and so the mobile device 10 can request its incoming communications to be forwarded to its newly assigned IP address via the proxy. The mobile device then retrieves any communications sent to it via the proxy.</p><p num="p0045">When the mobile device disconnects from the network-connected computer 110, the network-connected computer ceases to act as a requesting proxy and so no further communications intended for the mobile device are sent to the network-connected computer. Instead, communications will be queued at the enterprise server 60 until the mobile device 10 once again connects to the network 100.</p><p num="p0046">For certain types of device, the above approach of storing communications to await the mobile device to initiate connection may be inappropriate. For example, in the case of a mobile device with telephony capabilities and a device name which includes a telephone number as the device identifier, the name resolution service on the enterprise server may be used to identify that the device is a telephony device (from the device class name) and to extract the telephone number (device identifier) and then the device is dialled using the telephone number.</p><p num="p0047">A sender device which is sending communications to another device using a naming convention according to the invention specifies the following information to identify the target device:
<ol><li>1. a name determining a corresponding network address of a communications apparatus (enterprise server) with which the device name is registered;</li><li>2. a device name class; and</li><li>3. a device identifier which is unique for the class and which corresponds to the device identifier format of the class.</li></ol></p><p num="p0048">The enterprise server name is a conventional Internet Protocol address component, using the existing Internet infrastructure to identify an enterprise server with which particular device names are registered. Using this information and a Distributed Name Service, a communication destined for a communications device is delivered to the desired enterprise server 60. At the enterprise server, the device class name is identified 230 within the device name and interpreted 240 to identify a process 50 for interpreting device identifiers of the format of the identified class. The device identifier is identified 250 and then the identified interpreter process 50 interprets 260 the device identifier to identify a specific device.</p><p num="p0049">In an asynchronous messaging and queueing environment, interprocess communications are delivered across a heterogeneous network by a sender application program or process 120 placing messages on an outgoing queue, by communications manager programs 130 on computers within the network handling the delivery of messages across the network to a target queue, and by a target receiver process retrieving messages from the target queue when ready. Examples of such communications manager programs implementing message queueing are IBM Corporation's MQSeries (TM) family of messaging middleware products. In particular, IBM's MQSeries product family includes a computer program product which is specifically designed to satisfy the messaging needs of lightweight devices, as well as supporting mobility and the special requirements that arise from use of wireless communication networks.</p><p num="p0050">In an embodiment of the present invention in a message queueing network, sending messages to a target process on a mobile device requires specifying: the enterprise server address; a device name comprising a class name and unique device identifier (corresponding to a specific queue manager name if there is one queue manager, as is envisaged for typical resource-constrained mobile devices); and additionally a queue name relevant to the target process.</p><p num="p0051">According to this embodiment, the message queuing services of the communications manager programs are used to deliver interprocess communications to an input queue corresponding to a particular target process on the identified device. This target process must then access the queue to retrieve incoming messages. The use of such communications manager programs for inter-process communications enables processes running on lightweight, mobile devices to be part of a global messaging network.</p><p num="p0052">All application programs running on a mobile device must access their respective input queue, which is managed by the communications manager program on the device, in order to retrieve incoming communications. Similarly, the application programs send messages to queues managed by their local communications manager program when initiating inter-process communication both within the device and across the network. The messages are placed either on a local queue for retrieval by another application program running on the same device or on a transmission queue for delivery to an input queue of an application program running on a different device.</p><p num="p0053">The above description of preferred embodiments of the invention referred to the achievement of globally unique device names. In an alternative embodiment, aspects of the invention may be implemented to achieve device names which are unique within an enterprise but which are not required to be globally unique. This relies on the enterprise server name as a name component which distinguishes between enterprises, and then the allocation of class names only needs to be managed within the enterprise instead of globally. There are significant weaknesses with this approach, such as that devices would have to be renamed when moving to a new enterprise network unless device names are globally unique.</p><p num="p0054">The above description of a preferred embodiment suggests that a single enterprise server computer provides both the post box service and a name resolution process. In alternative embodiments, these services may be provided by different computers.</p></description><claims lang="DE" status="new"><claim id="c-de-01-0001" num="0001"><claim-text>Verfahren zum Auflösen eines Gerätenamens zur Identifizierung eines Gerätes in einem Datenübertragungsnetz, <b>dadurch gekennzeichnet, dass</b> das Verfahren die folgenden Schritte umfasst:
<claim-text>Erkennen (230) eines Klassennamens innerhalb eines Gerätenamens und Auflösen (240) des Klassennamens zur Ermittlung einer Geräteklasse, um so ein Prozess zur Auswertung von Gerätekennungen zu ermitteln, die ein bestimmtes der Geräteklasse zugeordnetes Format aufweisen; und</claim-text><claim-text>Erkennen (250) einer Gerätekennung innerhalb des Gerätenamens, wobei das Format der Gerätekennung dem Format der ermittelten Geräteklasse entspricht, und Auswerten (260) der Gerätekennung mit Hilfe des ermittelten Auswertungsprozesses zum Ermitteln eines bestimmten Gerätes innerhalb der Klasse.</claim-text></claim-text></claim><claim id="c-de-01-0002" num="0002"><claim-text>Verfahren nach Anspruch 1 zum Leiten einer Datenübertragung zu einem Zielgerät im Datenübertragungsnetz, wobei das Verfahren ferner die folgenden Schritte umfasst:
<claim-text>Starten eines Datenübertragungsprozesses zum Weiterleiten der Datenübertragung zu dem ermittelten Zielgerät als Reaktion auf das Auflösen des im Namen des Zielgerätes enthaltenen Klassennamens und auf das Auswerten der Gerätekennung zur Ermittlung des Zielgerätes.</claim-text></claim-text></claim><claim id="c-de-01-0003" num="0003"><claim-text>Verfahren nach Anspruch 2, bei dem die Schritte zum Auflösen des Gerätenamens in einem mit einem Netzwerk verbundenen Datenverarbeitungssystem (60) als Reaktion auf den Empfang einer an ein Zielgerät adressierten Datenübertragung durch das mit dem Netzwerk verbundene Datenverarbeitungssystem ausgeführt werden und bei dem der gestartete Datenübertragungsprozess die Datenübertragung von dem mit dem Netzwerk verbundenen Datenverarbeitungssystem zum ermittelten Zielgerät weiterleitet.</claim-text></claim><claim id="c-de-01-0004" num="0004"><claim-text>Verfahren nach Anspruch 2, bei dem der Schritt des Startens eines Datenübertragungsprozesses das Übertragen der Datenübertragung in eine Warteschlange in der mit dem Netzwerk verbundenen Datenverarbeitungseinrichtung umfasst, wobei die Warteschlange durch das ermittelte Gerät beschickt wird.</claim-text></claim><claim id="c-de-01-0005" num="0005"><claim-text>Verfahren nach Anspruch 1, bei dem die Schritte zum Auflösen des Gerätenamens durch ein auf einem mit dem Netzwerk verbundenen Datenverarbeitungssystem laufendes Namenauflösungsprogramm ausgeführt werden und das Namenauflösungsprogramm als Reaktion auf Anforderungen von einem aus einer Vielzahl mit dem Netzwerk verbundener Datenverarbeitungssysteme gestartet wird.</claim-text></claim><claim id="c-de-01-0006" num="0006"><claim-text>Computerprogramm, das einen Programmcode zum Steuern der Ausführung von Operationen in einer Datenverarbeitungseinrichtung, in welcher der Programmcode ausgeführt wird, umfasst, um ein Verfahren zum Auflösen von Gerätenamen auszuführen, <b>dadurch gekennzeichnet, dass</b> das Verfahren die folgenden Schritte umfasst:
<claim-text>Ermitteln (230) eines Klassennamens innerhalb eines Gerätenamens und Auflösen (240) des Klassennamens zur Ermittlung einer Geräteklasse, um so einen Prozess zur Auswertung von Gerätekennungen zu ermitteln, die ein bestimmtes der Geräteklasse zugeordnetes Format aufweisen; und</claim-text><claim-text>Erkennen (250) einer Gerätekennung innerhalb des Gerätenamens, wobei das Format der Gerätekennung dem Format der ermittelten Geräteklasse entspricht, und Auswerten (260) der Gerätekennung mit Hilfe des ermittelten Auswertungsprozesses zum Ermitteln eines bestimmten Gerätes innerhalb der Klasse.</claim-text></claim-text></claim><claim id="c-de-01-0007" num="0007"><claim-text>Vorrichtung zum Auflösen eines Gerätenamens zum Identifizieren eines Gerätes, <b>dadurch gekennzeichnet, dass</b> die Vorrichtung Folgendes umfasst:
<claim-text>einen Speicher</claim-text><claim-text>Programmcode als Reaktion auf das Eingeben eines Gerätenamens zum Erkennen (230) eines Klassennamens innerhalb des Gerätenamens und zum Auflösen (240) des Klassennamens zum Ermitteln einer Geräteklasse, um so einen Prozess zur Auswertung von Gerätekennungen zu ermitteln, die ein bestimmtes der Geräteklasse zugeordnetes Format aufweisen; und</claim-text><claim-text>Programmcode zum Ausführen des ermittelten Auswertungsprozesses zum Erkennen (250) einer Gerätekennung innerhalb des Gerätenamens, wobei das Format der Gerätekennung dem Format der ermittelten Geräteklasse entspricht, und zum Auswerten (260) der Gerätekennung zum Erkennen eines bestimmten Gerätes innerhalb der Klasse; und</claim-text><claim-text>ein Mittel zum Ausführen des Programmcodes.</claim-text></claim-text></claim><claim id="c-de-01-0008" num="0008"><claim-text>Vorrichtung nach Anspruch 7 zum Leiten von Datenübertragungen zu einem Zielgerät innerhalb eines Datenübertragungsnetzes, innerhalb dessen Geräte anhand eines Gerätenamens erkennbar sind, wobei die Vorrichtung ferner Folgendes umfasst:
<claim-text>ein Mittel zum Empfangen einer Datenübertragung, in welcher der Name eines zielgerätes enthalten ist; und</claim-text><claim-text>ein Mittel zum Weiterleiten der Datenübertragung zum Zielgerät als Reaktion auf das Erkennen eines Zielgerätes.</claim-text></claim-text></claim><claim id="c-de-01-0009" num="0009"><claim-text>Vorrichtung nach Anspruch 7, die einen Namensserver umfasst.</claim-text></claim><claim id="c-de-01-0010" num="0010"><claim-text>Verfahren zum Erzeugen eines Gerätenamens zur Verwendung bei Datenübertragungen zwischen einem bestimmten Gerät und anderen Geräten innerhalb eines Datenübertragungsnetzes, <b>dadurch gekennzeichnet, dass</b> das Verfahren die Ausführung eines Prozesses auf dem bestimmten Gerät zum Ausführen der folgenden Schritte umfasst:
<claim-text>Ermitteln (200) eines dem Gerätetyp des bestimmten Gerätes zugeordneten Klassennamens;</claim-text><claim-text>Ermitteln (200) einer Gerätekennung aus den im nichtflüchtigen Speicher (40) des bestimmten Geräts gespeicherten Daten; und</claim-text><claim-text>Erzeugen (210) eines Gerätenamens, der sich aus dem Klassennamen und der Gerätekennung zusammensetzt.</claim-text></claim-text></claim><claim id="c-de-01-0011" num="0011"><claim-text>Verfahren nach Anspruch 10, bei dem der Schritt des Ermittelns des Klassennamens das Ermitteln des Klassennamens aus den im nichtflüchtigen Speicher des bestimmten Geräts gespeicherten Daten umfasst.</claim-text></claim><claim id="c-de-01-0012" num="0012"><claim-text>Verfahren nach Anspruch 10, bei dem der Schritt des Ermittelns des Klassennamens das Ermitteln des Gerätetyps des bestimmten Geräts und das Ermitteln eines Klassennamens umfasst, dessen Zuordnung zum Gerätetyp vordefiniert ist.</claim-text></claim><claim id="c-de-01-0013" num="0013"><claim-text>Verfahren nach einem der Ansprüche 10 bis 12, bei dem der Prozess zum Erzeugen eines Gerätenamens gestartet wird, um den Gerätenamen als Teil des Bootprozesses des bestimmten Gerätes zu erzeugen.</claim-text></claim><claim id="c-de-01-0014" num="0014"><claim-text>Verfahren nach einem der Ansprüche 10 bis 12, bei dem der Prozess zum Erzeugen des Gerätenamens gestartet wird, um den Gerätenamen zu erzeugen, wenn eine Festplatte in dem bestimmten Gerät konfiguriert wird.</claim-text></claim><claim id="c-de-01-0015" num="0015"><claim-text>Verfahren nach einem der Ansprüche 10 bis 12, bei dem der Prozess zum Erzeugen des Gerätenamens gestartet wird, um den Gerätenamen als Reaktion auf einen Prozess in dem bestimmten Gerät zu erzeugen, durch den eine Datenübertragung zum Senden an ein anderes Gerät erzeugt wird.</claim-text></claim><claim id="c-de-01-0016" num="0016"><claim-text>Verfahren nach einem der Ansprüche 10 bis 15, das den Schritt des Sendens einer Datenübertragung an eine mit einem Netzwerk verbundene Datenübertragungseinrichtung innerhalb des Datenübertragungsnetzes beinhaltet, um die Registrierung des erzeugten Gerätenamens durch die Datenübertragungseinrichtung anzufordern, damit über die Datenübertragungseinrichtung Datenübertragungen zu dem Gerät geleitet werden können.</claim-text></claim><claim id="c-de-01-0017" num="0017"><claim-text>Computerprogramm, das einen Programmcode zum Steuern der Ausführung von Operationen in einer bestimmten Datenverarbeitungseinrichtung umfasst, in welcher der Programmcode ausgeführt wird, um ein Verfahren zum Erzeugen eines Gerätenamens zum Kennzeichnen des Gerätes auszuführen, wenn die Datenverarbeitungseinrichtung mit anderen Geräten in einem Datenübertragungsnetz kommuniziert, <b>dadurch gekennzeichnet, dass</b> das Verfahren die folgenden Schritte umfasst:
<claim-text>Ermitteln (200) eines dem Gerätetyp des bestimmten Geräts zugeordneten Klassennamens;</claim-text><claim-text>Ermitteln (200) einer Gerätekennung aus den im nichtflüchtigen Speicher (40) des bestimmten Geräts gespeicherten Daten; und</claim-text><claim-text>Erzeugen (210) eines Gerätenamens, der sich aus dem Klassennamen und der Gerätekennung zusammensetzt.</claim-text></claim-text></claim><claim id="c-de-01-0018" num="0018"><claim-text>Datenübertragungsgerät, das ein Mittel zum Erzeugen eines Gerätenamens zum Kennzeichnen des Gerätes beinhaltet, wenn die Datenübertragungseinrichtung mit anderen Geräten innerhalb eines Datenübertragungsnetzes kommuniziert, <b>dadurch gekennzeichnet, dass</b> das Mittel zum Erzeugen des Gerätenamens Folgendes umfasst:
<claim-text>einen Speicher</claim-text><claim-text>Programmcode zum Ermitteln (200) eines Klassennamens für das Datenübertragungsgerät, wobei der Klassenname einem Gerätetyp des Datenübertragungsgerätes zugeordnet ist;</claim-text><claim-text>Programmcode zum Zugreifen (200) auf die im nichtflüchtigen Speicher des Datenübertragungsgerätes gespeicherten Daten der Gerätekennung; und</claim-text><claim-text>Programmcode zum Verknüpfen der Daten des Klassennamens und der Gerätekennung zum Erzeugen (210) eines Gerätenamens; und</claim-text><claim-text>ein Mittel zum Ausführen des Programmcodes.</claim-text></claim-text></claim><claim id="c-de-01-0019" num="0019"><claim-text>Verfahren zum Erzeugen eines Gerätenamens, damit ein Datenübertragungsgerät mit anderen Geräten innerhalb eines Datenübertragungsnetzes kommunizieren kann, <b>dadurch gekennzeichnet, dass</b> das Verfahren die folgenden Schritte umfasst:
<claim-text>Registrieren eines Klassennamens bei einer Klassennamenzuordnungssteuerung, welche die unverwechselbare Zuordnung von Klassennamen zu bestimmten Geräteklassen steuert;</claim-text><claim-text>Zuordnen von Gerätekennungen auf unverwechselbare Weise zu bestimmten Geräten innerhalb einer Geräteklasse; und</claim-text><claim-text>Installieren eines Programmcodes (70) in dem Datenübertragungsgerät, wobei der Programmcode ausführbare Befehle zum Ausführen folgender Schritte beinhaltet: Ermitteln (200) eines bestimmten, dem Gerätetyp des Datenübertragungsgerätes zugeordneten, zuvor registrierten Klassennamens; Lesen (200) der im nichtflüchtigen Speicher (40) des Datenübertragungsgeräts gespeicherten Daten der Gerätekennung; und Erzeugen (210) eines Gerätenamens, der sich aus den Daten des Klassennamens und der Gerätekennung zusammensetzt in der Weise, dass der erzeugte Gerätename unverwechselbar ist.</claim-text></claim-text></claim></claims><claims lang="EN" status="new"><claim id="c-en-01-0001" num="0001"><claim-text>A method for resolving a device name to identify a device within a communications network, <b>characterized in that</b> the method comprises the steps of:
<claim-text>identifying (230) a class name within a device name and resolving (240) the class name to identify a device class, thereby to identify a process for interpreting device identifiers which have a particular format associated with the device class; and</claim-text><claim-text>identifying (250) a device identifier within the device name, which device identifier corresponds to the device identifier format of the identified device class, and interpreting (260) the device identifier using the identified interpreter process to identify an individual device within the class.</claim-text></claim-text></claim><claim id="c-en-01-0002" num="0002"><claim-text>A method according to claim 1, for routing a communication to a target device within the communications network, further comprising the steps of:
<claim-text>in response to resolving the class name within a target device name and interpreting the device identifier to identify the target device, initiating a communication process to forward the communication to the identified target device.</claim-text></claim-text></claim><claim id="c-en-01-0003" num="0003"><claim-text>A method according to claim 2, wherein the device name resolution steps are performed at a network-connected data processing system (60) in response to receipt by the network-connected data processing system of a communication addressed to a target device, and wherein the initiated communications process forwards the communication from the network-connected data processing system to the identified target device.</claim-text></claim><claim id="c-en-01-0004" num="0004"><claim-text>A method according to claim 2, wherein the step of initiating a communication process comprises transferring the communication to a queue at the network-connected data processing apparatus which queue is serviced by the identified device.</claim-text></claim><claim id="c-en-01-0005" num="0005"><claim-text>A method according to claim 1, wherein the device name resolution steps are performed by a name resolution service running on a network-connected data processing system, the name resolution service being initiated in response to requests from any of a plurality of network-connected data processing systems.</claim-text></claim><claim id="c-en-01-0006" num="0006"><claim-text>A computer program, comprising program code for controlling the performance of operations on a data processing apparatus on which the program code is executed, to perform a method of resolving device names <b>characterized in that</b> the method comprises the steps of:
<claim-text>identifying (230) a class name within a device name and resolving (240) the class name to identify a device class, thereby to identify a process for interpreting device identifiers which have a particular format associated with the device class; and</claim-text><claim-text>identifying (250) a device identifier within the device name, which device identifier corresponds to the device identifier format of the identified device class, and interpreting (260) the device identifier using the identified interpreter process to identify an individual device within the class.</claim-text></claim-text></claim><claim id="c-en-01-0007" num="0007"><claim-text>An apparatus for resolving a device name to identify a device, <b>characterized in that</b> the apparatus comprises;

a memory;

program code, responsive to input of a device name, for identifying (230) a class name within the device name and for resolving (240) the class name to identify a device class, thereby to identify a process for interpreting device identifiers which have a particular format associated with the device class;

program code implementing the identified interpreter process for identifying (250) a device identifier within the device name, which device identifier corresponds to the device identifier format of the identified device class, and for interpreting (260) the device identifier to identify an individual device within the class; and

means for executing the program code.</claim-text></claim><claim id="c-en-01-0008" num="0008"><claim-text>An apparatus according to claim 7, for routing communications to a target device within a communications network, wherein devices within the network are identifiable by a device name, the apparatus further comprising:
<claim-text>means for receiving a communications including a target device name* and</claim-text><claim-text>means, responsive to said identification of an individual device, for forwarding the communication to the target device.</claim-text></claim-text></claim><claim id="c-en-01-0009" num="0009"><claim-text>An apparatus according to claim 7 comprising a name server.</claim-text></claim><claim id="c-en-01-0010" num="0010"><claim-text>A method of generating a device name for use in communications between a current device and other devices within a communications network, <b>characterized in that</b> the method contprises executing a process on the current device to perform the steps of:
<claim-text>determining (2 00) a class name associated with the device type of the current device;</claim-text><claim-text>determining (200) a device idencifiar from information held in non-volatile memory (40) on the current device; and</claim-text><claim-text>generating (210) a device name which combines the class name and device identifier.</claim-text></claim-text></claim><claim id="c-en-01-0011" num="0011"><claim-text>A method according to claim 10, wherein the step of determining the class name comprises determining the class name from information held in non-volatile memory on the current device.</claim-text></claim><claim id="c-en-01-0012" num="0012"><claim-text>A method according to claim 10, wherein the step of determining the class name comprises determining the device type of the current device and determining a class name which has a pre-defined association with the device type.</claim-text></claim><claim id="c-en-01-0013" num="0013"><claim-text>A method according to any one of claims 10 to 12, wherein said process for device name generation is initiated to generate the device name as part of the current device boot up process.</claim-text></claim><claim id="c-en-01-0014" num="0014"><claim-text>A method according to any one of claims 10 to 12, wherein said process for device name generation is initiated to generate the device name when a hard disk on the current device is configured.</claim-text></claim><claim id="c-en-01-0015" num="0015"><claim-text>A method according to any one of claims 10 to 12, wherein said process for device name generation is initiated to generate the device name in response to a process on the current device generating a communication for sending to another device.</claim-text></claim><claim id="c-en-01-0016" num="0016"><claim-text>A method according to any one of claims 10 to 15, including the step of sending a communication to a network-connected communications apparatus within the communications network to request registration of the generated device name by said communications apparatus, thereby to enable routing of communications to the device via the communications apparatus.</claim-text></claim><claim id="c-en-01-0017" num="0017"><claim-text>A computer program, comprising program code for controlling the performance of operations on a current data processing apparatus on which the program code is executed, to perform a method of generating a device name for identifying the device when communicating with other devices within a communications network, <b>characterized in that</b> the method comprises the steps of:
<claim-text>determining (200) a class name associated with the device type of the current device;</claim-text><claim-text>determining (200) a device identifier from information held in non-volatile memory (40) on the current device; and</claim-text><claim-text>generating (210) a device name which combines the class name and device identifier.</claim-text></claim-text></claim><claim id="c-en-01-0018" num="0018"><claim-text>A communications device including means for generating a device name, for identifying the device when communicating with other devices within a communications network, <b>characterized in that</b> the means for generating the device nape comprises:
<claim-text>a memory;</claim-text><claim-text>program code for determining (200) a class name for the communications device, which class name is associated with a device type of the communications device;</claim-text><claim-text>program code for accessing (200) device identifier information held in non-volatile memory of the communications device;</claim-text><claim-text>program code for combining the class name and device identifier information to generate (210) a device name; and</claim-text><claim-text>means for executing the program code.</claim-text></claim-text></claim><claim id="c-en-01-0019" num="0019"><claim-text>A method for generating a device name, to enable a communications device to communicate with other devices within a communications network, <b>characterised in that</b> the method comprises the steps of;

registering a class name with a class name allocation controller which controls unique allocation of class names to particular classes of device;

allocating device identifiers uniquely to individual devices within a device class; and

installing program code (70) on the communications device which program code includes executable instructions for: determining (200) a respective pre-registered class name associated with the device type of the communications device; reading (200) device identifier information held in non-volatile memory (40) of the communications device; and generating (210) a device name which combines the class name and device identifier information, such that said generated device name is unique.</claim-text></claim></claims><claims lang="FR" status="new"><claim id="c-fr-01-0001" num="0001"><claim-text>Procédé destiné à résoudre un nom de dispositif afin d'identifier un dispositif au sein d'un réseau de communications, <b>caractérisé en ce que</b> le procédé comprend les étapes consistant à :
<claim-text>identifier (230) un nom de classe au sein d'un nom de dispositif et résoudre (240) le nom de classe afin d'identifier une classe du dispositif, afin d'identifier ainsi un traitement destiné à interpréter des identificateurs de dispositif qui ont un format particulier associé à la classe de dispositif, et</claim-text><claim-text>identifier (250) un identificateur de dispositif au sein du nom de dispositif, lequel identificateur de dispositif correspond au format d'identificateur de dispositif de la classe de dispositif identifiée, et interpréter (260) l'identificateur de dispositif en utilisant le traitement de dispositif d'interprétation identifié pour identifier un dispositif individuel au sein de la classe.</claim-text></claim-text></claim><claim id="c-fr-01-0002" num="0002"><claim-text>Procédé selon la revendication 1, destiné à acheminer une communication à un dispositif cible au sein du réseau de communications, comprenant en outre les étapes consistant à :
<claim-text>en réponse à la résolution du nom de classe au sein d'un nom de dispositif cible et à l'interprétation de l'identificateur de dispositif afin d'identifier le dispositif cible, initier un traitement de communication afin de transférer la communication au dispositif cible identifié.</claim-text></claim-text></claim><claim id="c-fr-01-0003" num="0003"><claim-text>Procédé selon la revendication 2, dans lequel les étapes de résolution de nom de dispositif sont réalisées au niveau d'un système de traitement de données connecté à un réseau (60) en réponse à la réception par le système de traitement de données connecté en réseau d'une communication adressée à un dispositif cible, et dans lequel le traitement de communication initié transfère la communication depuis le système de traitement de données connecté au réseau au dispositif cible identifié.</claim-text></claim><claim id="c-fr-01-0004" num="0004"><claim-text>Procédé selon la revendication 2, dans lequel l'étape consistant à initier un traitement de communication comprend le transfert de la communication à une file d'attente au niveau du dispositif de traitement de données connecté au réseau, laquelle file d'attente est prise en charge par le dispositif identifié.</claim-text></claim><claim id="c-fr-01-0005" num="0005"><claim-text>Procédé selon la revendication 1, dans lequel les étapes de résolution de nom de dispositif sont réalisées par un service de résolution de nom s'exécutant sur un système de traitement de données connectées au réseau, le service de résolution de nom étant initié en réponse à des demandes provenant de l'un quelconque d'une pluralité de systèmes de traitement de données connectés au réseau.</claim-text></claim><claim id="c-fr-01-0006" num="0006"><claim-text>Programme informatique comprenant un code de programme destiné à commander les performances des opérations sur un dispositif de traitement de données, sur lequel le code de programme est exécuté afin de réaliser un procédé de résolution de noms de dispositifs <b>caractérisé en ce que</b> le procédé comprend les étapes consistant à :
<claim-text>identifier (230) un nom de classe au sein d'un nom de dispositif et résoudre (240) le nom de classe afin d'identifier une classe de dispositif, afin d'identifier ainsi un traitement destiné à interpréter les identificateurs de dispositif qui ont un format particulier associé à la classe de dispositif, et</claim-text><claim-text>identifier (250) un identificateur de dispositif au sein du nom de dispositif, lequel identificateur de dispositif correspond au format d'identificateur de dispositif de la classe de dispositif identifiée, et interpréter (260) l'identificateur de dispositif en utilisant le traitement de dispositif d'interprétation identifié afin d'identifier un dispositif individuel au sein de la classe.</claim-text></claim-text></claim><claim id="c-fr-01-0007" num="0007"><claim-text>Dispositif destiné à résoudre un nom de dispositif afin d'identifier un dispositif, <b>caractérisé en ce que</b> le dispositif comprend :
<claim-text>une mémoire,</claim-text><claim-text>un code de programme, répondant à l'entrée d'un nom de dispositif, afin d'identifier (230) un nom de classe à l'intérieur du nom de dispositif et afin de résoudre (240) le nom de classe pour identifier une classe de dispositif, pour identifier ainsi un traitement destiné à interpréter des identificateurs de dispositif qui ont un format particulier associé à la classe de dispositif,</claim-text><claim-text>un code de programme mettant en oeuvre le traitement du dispositif d'interprétation identifié pour identifier (250) un identificateur de dispositif au sein du nom de dispositif, lequel identificateur de dispositif correspond au format d'identificateur de dispositif de la classe de dispositif identifiée, et destiné à interpréter (260) l'identificateur de dispositif pour identifier un dispositif individuel au sein de la classe, et</claim-text><claim-text>un moyen destiné à exécuter le code de programme.</claim-text></claim-text></claim><claim id="c-fr-01-0008" num="0008"><claim-text>Dispositif selon la revendication 7, destiné à acheminer des communications à un dispositif cible au sein d'un réseau de communications dans lequel les dispositifs au sein du réseau peuvent être identifiés par un nom de dispositif, le dispositif comprenant en outre :
<claim-text>un moyen destiné à recevoir une communication comprenant un nom de dispositif cible, et</claim-text><claim-text>un moyen, en réponse à ladite identification d'un dispositif individuel, destiné à transférer la communication au dispositif cible.</claim-text></claim-text></claim><claim id="c-fr-01-0009" num="0009"><claim-text>Dispositif selon la revendication 7, comprenant un serveur de noms.</claim-text></claim><claim id="c-fr-01-0010" num="0010"><claim-text>Procédé destiné à générer un nom de dispositif en vue d'une utilisation dans des communications entre un dispositif en cours et d'autres dispositifs au sein d'un réseau de communications, <b>caractérisé en ce que</b> le procédé comprend l'exécution d'un traitement sur le dispositif en cours afin de réaliser les étapes consistant à :
<claim-text>déterminer (200) un nom de classe associé au type de dispositif du dispositif en cours,</claim-text><claim-text>déterminer (200) un identificateur de dispositif à partir des informations contenues dans une mémoire non volatile (40) sur le dispositif en cours, et</claim-text><claim-text>générer (210) un nom de dispositif qui combine le nom de classe et l'identificateur de dispositif.</claim-text></claim-text></claim><claim id="c-fr-01-0011" num="0011"><claim-text>Procédé selon la revendication 10 dans lequel l'étape consistant à déterminer le nom de classe comprend la détermination du nom de classe à partir des informations contenues dans la mémoire non volatile sur le dispositif en cours.</claim-text></claim><claim id="c-fr-01-0012" num="0012"><claim-text>Procédé selon la revendication 10, dans lequel l'étape consistant à déterminer le nom de classe comprend la détermination du type de dispositif du dispositif en cours et la détermination d'un nom de classe qui présente une association prédéfinie avec le type de dispositif.</claim-text></claim><claim id="c-fr-01-0013" num="0013"><claim-text>Procédé selon l'une quelconque des revendications 10 à 12, dans lequel ledit traitement pour la génération de nom de dispositif est initié pour générer le nom du dispositif comme étant une partie du traitement d'amorçage du dispositif en cours.</claim-text></claim><claim id="c-fr-01-0014" num="0014"><claim-text>Procédé selon l'une quelconque des revendications 10 à 12, dans lequel ledit traitement pour la génération de nom de dispositif est initié pour générer le nom du dispositif lorsqu'un disque dur sur le dispositif en cours est configuré.</claim-text></claim><claim id="c-fr-01-0015" num="0015"><claim-text>Procédé selon l'une quelconque des revendications 10 à 12, dans lequel ledit traitement pour la génération de nom de dispositif est initié pour générer le nom du dispositif en réponse à un traitement sur le dispositif en cours générant une communication en vue d'un envoi vers un autre dispositif.</claim-text></claim><claim id="c-fr-01-0016" num="0016"><claim-text>Procédé selon l'une quelconque des revendications 10 à 15, comprenant l'étape consistant à envoyer une communication à un dispositif de communications connecté en réseau au sein du réseau de communications pour demander l'enregistrement du nom de dispositif généré par ledit dispositif de communication, afin de permettre ainsi l'acheminement des communications au dispositif par l'intermédiaire du dispositif de communication.</claim-text></claim><claim id="c-fr-01-0017" num="0017"><claim-text>Programme informatique, comprenant un code de programme destiné à commander des performances des opérations sur un dispositif de traitement de données en cours, sur lequel le code de programme est exécuté, afin de réaliser un procédé destiné à générer un nom de dispositif pour identifier le dispositif lorsqu'il communique avec d'autres dispositifs au sein d'un réseau de communications, <b>caractérisé en ce que</b> le procédé comprend les étapes consistant à :
<claim-text>déterminer (200) un nom de classe associé au type de dispositif du dispositif en cours,</claim-text><claim-text>déterminer (200) un identificateur de dispositif à partir des informations conservées dans la mémoire non volatile (40) sur le dispositif en cours, et</claim-text><claim-text>générer (210) un nom de dispositif qui combine le nom de classe et l'identificateur de dispositif.</claim-text></claim-text></claim><claim id="c-fr-01-0018" num="0018"><claim-text>Dispositif de communications comprenant un moyen destiné à générer un nom de dispositif, afin d'identifier le dispositif lorsqu'il communique avec d'autres dispositifs au sein d'un réseau de communications, <b>caractérisé en ce que</b> le moyen pour générer le nom de dispositif comprend :<claim-text>une mémoire,</claim-text><claim-text>un code de programme destiné à déterminer (200) un nom de classe pour le dispositif de communications, lequel nom de classe est associé à un type de dispositif du dispositif de communications,</claim-text><claim-text>un code de programme pour accéder (200) à des informations d'identificateur de dispositif conservées dans une mémoire non volatile du dispositif de communications,</claim-text><claim-text>un code de programme destiné à combiner le nom de classe et les informations d'identificateur de dispositif afin de générer un nom de dispositif, et</claim-text><claim-text>un moyen destiné à exécuter le code de programme.</claim-text></claim-text></claim><claim id="c-fr-01-0019" num="0019"><claim-text>Procédé destiné à générer un nom de dispositif, pour permettre à un dispositif de communications de communiquer avec d'autres dispositifs au sein d'un réseau de communications, <b>caractérisé en ce que</b> le procédé comprend les étapes consistant à :
<claim-text>enregistrer un nom de classe avec un contrôleur d'allocation de nom de classe qui commande une allocation unique de noms de classes à des classes particulières de dispositifs,</claim-text><claim-text>allouer des identificateurs de dispositif de manière unique à des dispositifs individuels au sein d'une classe de dispositif, et</claim-text><claim-text>installer un code de programme (70) sur le dispositif de communications, lequel code de programme inclut des instructions exécutables destinées à : déterminer (200) un nom de classe préenregistré respectif associé au type de dispositif du dispositif de communications, lire (200) les informations d'identificateur de dispositif conservées dans la mémoire non volatile (40) du dispositif de communications, et générer (210) un nom de dispositif qui combine le nom de classe et les informations d'identificateur de dispositif, de telle manière que ledit nom de dispositif généré est unique.</claim-text></claim-text></claim></claims><legal-status status="new"><legal-event country="EP" code="REG" date="20061229"><legal-event-body><event-title>REFERENCE TO A NATIONAL CODE</event-title><event-attributes><event-attribute><event-attribute-label>Ref Country Code </event-attribute-label><event-attribute-value>IE</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Ref Legal Event Code </event-attribute-label><event-attribute-value>FG4D</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="REF" date="20061228"><legal-event-body><event-title>CORRESPONDS TO:</event-title><event-attributes><event-attribute><event-attribute-label>Ref Document Number </event-attribute-label><event-attribute-value>60124440</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Country of Ref Document </event-attribute-label><event-attribute-value>DE</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Date of Ref Document </event-attribute-label><event-attribute-value>20061228</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Kind Code of Ref Document </event-attribute-label><event-attribute-value>P</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="REG" date="20061215"><legal-event-body><event-title>REFERENCE TO A NATIONAL CODE</event-title><event-attributes><event-attribute><event-attribute-label>Ref Country Code </event-attribute-label><event-attribute-value>CH</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Ref Country Code </event-attribute-label><event-attribute-value>CH</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Ref Legal Event Code </event-attribute-label><event-attribute-value>EP</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Ref Legal Event Code </event-attribute-label><event-attribute-value>NV</event-attribute-value></event-attribute><event-attribute><event-attribute-label>representative=s name </event-attribute-label><event-attribute-value>PETER M. KLETT</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="AK" date="20061115"><legal-event-body><event-title>DESIGNATED CONTRACTING STATES:</event-title><event-attributes><event-attribute><event-attribute-label>Kind Code of Ref Document </event-attribute-label><event-attribute-value>B1</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Designated State(s) </event-attribute-label><event-attribute-value>ATBECHCYDEDKESFIFRGBGRIEITLILUMCNLPTSETR</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="REG" date="20061115"><legal-event-body><event-title>REFERENCE TO A NATIONAL CODE</event-title><event-attributes><event-attribute><event-attribute-label>Ref Country Code </event-attribute-label><event-attribute-value>GB</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Ref Legal Event Code </event-attribute-label><event-attribute-value>FG4D</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="17Q" date="20041103"><legal-event-body><event-title>FIRST EXAMINATION REPORT</event-title><event-attributes><event-attribute><event-attribute-label>Effective Date </event-attribute-label><event-attribute-value>20040921</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="AKX" date="20041006"><legal-event-body><event-title>PAYMENT OF DESIGNATION FEES</event-title><event-attributes><event-attribute><event-attribute-label>Designated State(s) </event-attribute-label><event-attribute-value>ATBECHCYDEDKESFIFRGBGRIEITLILUMCNLPTSETR</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="17P" date="20040825"><legal-event-body><event-title>REQUEST FOR EXAMINATION FILED</event-title><event-attributes><event-attribute><event-attribute-label>Effective Date </event-attribute-label><event-attribute-value>20040626</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="AK" date="20040114"><legal-event-body><event-title>DESIGNATED CONTRACTING STATES:</event-title><event-attributes><event-attribute><event-attribute-label>Kind Code of Ref Document </event-attribute-label><event-attribute-value>A3</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Designated State(s) </event-attribute-label><event-attribute-value>ATBECHCYDEDKESFIFRGBGRIEITLILUMCNLPTSETR</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="AX" date="20040114"><legal-event-body><event-title>EXTENSION OF THE EUROPEAN PATENT TO</event-title><event-attributes><event-attribute><event-attribute-label>Countries concerned </event-attribute-label><event-attribute-value>ALLTLVMKROSI</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="AK" date="20010829"><legal-event-body><event-title>DESIGNATED CONTRACTING STATES:</event-title><event-attributes><event-attribute><event-attribute-label>Kind Code of Ref Document </event-attribute-label><event-attribute-value>A2</event-attribute-value></event-attribute><event-attribute><event-attribute-label>Designated State(s) </event-attribute-label><event-attribute-value>ATBECHCYDEDKESFIFRGBGRIEITLILUMCNLPTSETR</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event><legal-event country="EP" code="AX" date="20010829"><legal-event-body><event-title>EXTENSION OF THE EUROPEAN PATENT TO</event-title><event-attributes><event-attribute><event-attribute-label>free format text </event-attribute-label><event-attribute-value>AL;LT;LV;MK;RO;SI</event-attribute-value></event-attribute></event-attributes></legal-event-body></legal-event></legal-status></patent-document>